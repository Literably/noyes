#!/usr/bin/env ruby
# vim: set filetype=ruby :
ROOT = File.dirname(File.dirname(__FILE__))
$: << "#{ROOT}/lib" << "#{ROOT}/ship"

require 'optparse'
options = {}
OptionParser.new do |opt|
  opt.banner = 'Usage: nrec [options] file1 file2 ...'
  opt.on '-v', '--verbose', 'Output more information' do 
    options[:verbose] = true
  end
  options[:implementation] = :ruby
  opt.on '-j', '--java', 'Use java implementation' do
    options[:implementation] = :java
  end
  opt.on( '-h', '--help', 'Display this screen' ) do
    puts opt
    exit
  end
end.parse!

# Must set implementation specific library path before requiring libraries.
case options[:implementation]
when :java
  if RUBY_PLATFORM != 'java'
    puts "The Java implementation is not accessable from Ruby, only JRuby."
    puts "You'll need to check your environment carefully.  If you've"
    puts "installed this gem under both ruby and jruby and both are in"
    puts "your current environment you may have created a conflict."
    puts "you must make sure the jruby path preceeds the ruby path."
    exit
  end
  puts "Using Java implementation" if options[:verbose]
  require 'noyes_java'
  include NoyesJava
when :ruby
  if options[:verbose]
    if RUBY_PLATFORM == 'java'
      puts "Using pure ruby implementation under JRuby #{RUBY_VERSION}."
    else
      puts "Using pure ruby implementation under Ruby #{RUBY_VERSION}."
    end
  end

  require 'noyes'
  include Noyes
end
require 'socket'

def recognize file, node='174.129.244.159', port=2348
  TCPSocket.open(node, port) do |client|
    send_incremental_features file, client, client
  end
end

ARGV.each do |file|
  puts "recognizing file #{file}" if options[:verbose]
  result = recognize file
  puts "\n#{result}"
end
