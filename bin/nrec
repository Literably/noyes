#!/usr/bin/env ruby
# vim: set filetype=ruby :
ROOT = File.dirname(File.dirname(__FILE__))
VERSION_FILE = "#{ROOT}/VERSION"
$: << "#{ROOT}/lib" << "#{ROOT}/ship"

require 'trollop'

options = Trollop::options do
  version "Noyes #{IO.read(VERSION_FILE).strip} (c) 2010 Talkhouse"
  banner 'Usage: nrec [options] file1 file2 ...'
  opt :implementation, "ruby, c, or java", :default => 'ruby'
  opt :address, "address", :default => '174.129.244.159'
  opt :port, "port", :default => 2348
  opt :bits, "bit depth", :default => 16
  opt :frequency, "sampling frequency", :default => 16000
  opt :payload, "mfcc, or pcm", :default => 'mfcc'
  opt :verbose, "verbose", :default => false
end

if options[:bits] != 16 && options[:payload] == 'mfcc'
  Trollop::die :bits, "must be 16 for mfcc"
end

if options[:payload] == 'mfcc' && ((options[:frequency] % 8000) != 0)
  Trollop::die :frequency, "(#{options[:frequency]}) for mfcc must be divisible by 8000"
end

# Must set implementation specific library path before requiring libraries.
case options[:implementation].to_sym
when :c
  if RUBY_PLATFORM == 'java'
    puts "The Java implementation is not accessable from Ruby, only JRuby."
    puts "You'll need to check your environment carefully.  If you've"
    puts "installed this gem under both ruby and jruby and both are in"
    puts "your current environment you may have created a conflict."
    puts "You must make sure the Ruby path preceeds the JRuby path."
    exit
  end
  puts "Using C implementation" if options[:verbose]
  require 'noyes_c'
  include NoyesC
when :java
  if RUBY_PLATFORM != 'java'
    puts "The Java implementation is not accessable from Ruby, only JRuby."
    puts "You'll need to check your environment carefully.  If you've"
    puts "installed this gem under both ruby and jruby and both are in"
    puts "your current environment you may have created a conflict."
    puts "You must make sure the JRuby path preceeds the Ruby path."
    exit
  end
  puts "Using Java implementation" if options[:verbose]
  require 'noyes_java'
  include NoyesJava
when :ruby
  if options[:verbose]
    if RUBY_PLATFORM == 'java'
      puts "Using pure ruby implementation under JRuby #{RUBY_VERSION}."
    else
      puts "Using pure ruby implementation under Ruby #{RUBY_VERSION}."
    end
  end

  require 'noyes'
  include Noyes
end
require 'socket'

def recognize file, options
  TCPSocket.open(options[:address], options[:port]) do |client|
    bits, rate = options[:bits], options[:frequency]
    if options[:pcm]
      send_incremental_pcm file, client, client, bits, rate
    else
      send_incremental_features file, client, client, bits, rate
    end
  end
end

ARGV.each do |file|
  puts "recognizing file #{file}" if options[:verbose]
  result = recognize file, options
  puts "\n#{result}"
end
